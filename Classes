class Classes:
    'Optional class documentation string'

print(Classes.__doc__)

class Employee:
    # common base class for all employees
    empCount = 0

    def __init__(self, name, salary):
        self.name = name
        self.salary = salary
        Employee.empCount +=1

    def displayCount(self):
        print("Total Number of Employees :", Employee.empCount)

    def displayeEmployee(self):
        print("Name : ", self.name)
        print("Salary : ", self.salary)

emp1 = Employee("Zara", 10000)
emp2 = Employee("John", 20000)

emp1.displayeEmployee()
emp2.displayeEmployee()
print("Total Employee %d" % Employee.empCount)

print(hasattr(emp1, 'age'))

try:
    print(getattr(emp1, 'age'))
except:
    print("There is no age property in emp1")
finally:
    print("Finally is executed")

setattr(emp1, 'age', 8)
print(emp1.age)
delattr(emp1, 'age')

try:
    print(getattr(emp1, 'age'))
except:
    print("There is no age property in emp1")
finally:
    print("Finally is executed")

# __dict__ - Dictionary containing the class's name space
# __doc__ - Class documentation string or none, if unidentified
# __name__ - Class name
# __module__ - Module name in which the class is defined
# __del__() - destructor that deletes an object instance
# __str__(self) - string representation of a class
# __cmp__(self, x) - object comparison

#Data hiding
class JustCounter:
    __secretCount = 0

    def count(self):
        self.__secretCount += 1
        print(self.__secretCount)

counter = JustCounter()
counter.count()
counter.count()
print(counter.__secretCounter)


